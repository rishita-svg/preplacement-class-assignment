import sys

class Solution:
    def spirallyTraverse(self, matrix):
        r = len(matrix)
        c = len(matrix[0]) if r else 0
        res = []
        top, bottom = 0, r - 1
        left, right = 0, c - 1

        while top <= bottom and left <= right:
            for j in range(left, right + 1):
                res.append(matrix[top][j])
            top += 1

            for i in range(top, bottom + 1):
                res.append(matrix[i][right])
            right -= 1

            if top <= bottom:
                for j in range(right, left - 1, -1):
                    res.append(matrix[bottom][j])
                bottom -= 1

            if left <= right:
                for i in range(bottom, top - 1, -1):
                    res.append(matrix[i][left])
                left += 1

        return res

def main():
    tokens = list(map(int, sys.stdin.buffer.read().split()))
    it = iter(tokens)
    r = next(it); c = next(it)
    vals = [next(it) for _ in range(r * c)]
    mat = [vals[i*c:(i+1)*c] for i in range(r)]

    sol = Solution()
    result = sol.spirallyTraverse(mat)  # <-- now only matrix
    print(*result)

if __name__ == "__main__":
    main()
